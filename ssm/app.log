2016-04-15 17:44:11 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 17:44:11 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 17:44:11 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 17:44:11 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@427800ef declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 17:44:11 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 17:44:11 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 17:44:11 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@619f9377, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@338a9bb3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50f41f34, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b2cb871, org.springframework.test.context.transaction.TransactionalTestExecutionListener@65012945, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f3ca4d1]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:11 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:12 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 17:44:12 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:12 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:12 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 17:44:12 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 17:44:12 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 17:44:12 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 17:44:12 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 17:44:12 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 17:44:12 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 12 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 17:44:12 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@1df749e3: startup date [Fri Apr 15 17:44:12 CST 2016]; root of context hierarchy
2016-04-15 17:44:12 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@1df749e3: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 17:44:12 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 17:44:12 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]]
2016-04-15 17:44:12 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]
2016-04-15 17:44:12 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:164)] DEBUG Creating MapperFactoryBean with name 'IUserDao' and 'com.szl.decp.customer.dao.IUserDao' mapperInterface
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 17:44:12 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:44:12 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2e5f317c]
2016-04-15 17:44:12 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@343c3470]
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 17:44:12 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.IUserDao com.szl.decp.customer.service.impl.UserServiceImpl.userDao
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.IUserDao com.szl.decp.customer.service.impl.UserServiceImpl.userDao
2016-04-15 17:44:12 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'IUserDao' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 17:44:12 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 17:44:12 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'IUserDao'
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 17:44:12 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@bf33a83]
2016-04-15 17:44:12 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 17:44:13 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 17:44:13 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 17:44:13 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 17:44:13 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 17:44:13 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@18e73d0 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 17:44:13 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'com.szl.decp.customer.service.impl.UserServiceImplTest': ResourceElement for private com.szl.decp.customer.service.IUserService com.szl.decp.customer.service.impl.UserServiceImplTest.userService
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userService'
2016-04-15 17:44:13 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 17:44:13 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = test@UserServiceImplTest, testException = org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.szl.decp.customer.dao.IUserDao.selectByPrimaryKey, mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 17:44:13 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 17:44:13 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@1df749e3: startup date [Fri Apr 15 17:44:12 CST 2016]; root of context hierarchy
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroyBean(DefaultSingletonBeanRegistry.java:568)] DEBUG Retrieved dependent beans for bean 'userService': [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:44:13 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 17:47:40 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 17:47:40 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 17:47:40 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 17:47:40 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@54856d00 declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 17:47:40 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 17:47:40 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 17:47:40 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@338a9bb3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50f41f34, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4b2cb871, org.springframework.test.context.support.DirtiesContextTestExecutionListener@65012945, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f3ca4d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3668ad91]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 17:47:40 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@62c4268f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 17:47:40 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 17:47:40 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 17:47:40 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 17:47:40 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 17:47:40 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 17:47:40 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 17:47:40 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 17:47:40 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 17:47:40 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 17:47:40 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 12 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 17:47:40 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@5613e573: startup date [Fri Apr 15 17:47:40 CST 2016]; root of context hierarchy
2016-04-15 17:47:40 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@5613e573: org.springframework.beans.factory.support.DefaultListableBeanFactory@7fd36e0a: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:47:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 17:47:41 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 17:47:41 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 17:47:41 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 17:47:41 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 17:47:41 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 17:47:41 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]]
2016-04-15 17:47:41 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]
2016-04-15 17:47:41 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:164)] DEBUG Creating MapperFactoryBean with name 'IUserDao' and 'com.szl.decp.customer.dao.IUserDao' mapperInterface
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 17:47:41 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 17:47:41 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1a275a2e]
2016-04-15 17:47:41 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7552f6aa]
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fd36e0a: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 17:47:41 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.IUserDao com.szl.decp.customer.service.impl.UserServiceImpl.userDao
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.IUserDao com.szl.decp.customer.service.impl.UserServiceImpl.userDao
2016-04-15 17:47:41 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'IUserDao'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'IUserDao'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'IUserDao' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1479)] WARN  Bean creation exception on FactoryBean type check: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IUserDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]: Cannot resolve reference to bean 'sqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
2016-04-15 17:47:41 [org.springframework.context.support.GenericApplicationContext.refresh(AbstractApplicationContext.java:544)] WARN  Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.szl.decp.customer.dao.IUserDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IUserDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]: Cannot resolve reference to bean 'sqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.szl.decp.customer.dao.IUserDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1326)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:967)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	... 41 more
Related cause:
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IUserDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]: Cannot resolve reference to bean 'sqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:423)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1130)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1069)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:967)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 64 more
Caused by: org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:434)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:340)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 71 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parse(XMLConfigBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:428)
	... 74 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XMLConfigBuilder.java:322)
	at org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XMLConfigBuilder.java:107)
	... 76 more
Caused by: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:782)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:754)
	at org.apache.ibatis.session.Configuration.addResultMap(Configuration.java:536)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addResultMap(MapperBuilderAssistant.java:207)
	at org.apache.ibatis.builder.ResultMapResolver.resolve(ResultMapResolver.java:47)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:284)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:251)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:243)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 79 more
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fd36e0a: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 17:47:41 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 17:47:41 [org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:231)] ERROR Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4b2cb871] to prepare test instance [com.szl.decp.customer.service.impl.UserServiceImplTest@62c4268f]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.szl.decp.customer.dao.IUserDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IUserDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]: Cannot resolve reference to bean 'sqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [decp/mybatis-config.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for cutomer.BaseResultMap
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 25 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.szl.decp.customer.dao.IUserDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@javax.annotation.Resource(shareable=true, mappedName=, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1326)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:967)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	... 41 more
2016-04-15 17:47:41 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 18:11:22 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 18:11:22 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 18:11:22 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 18:11:22 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@756bc09d declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 18:11:22 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 18:11:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 18:11:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b2cb871, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65012945, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f3ca4d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3668ad91, org.springframework.test.context.transaction.TransactionalTestExecutionListener@125b267f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e3c6543]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:11:22 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@23ec84dc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 18:11:22 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 18:11:22 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 18:11:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 18:11:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 18:11:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 18:11:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 18:11:22 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 18:11:22 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@142b9cd8: startup date [Fri Apr 15 18:11:22 CST 2016]; root of context hierarchy
2016-04-15 18:11:22 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@142b9cd8: org.springframework.beans.factory.support.DefaultListableBeanFactory@11dd9416: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 18:11:22 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 18:11:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]]
2016-04-15 18:11:22 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 18:11:22 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]
2016-04-15 18:11:22 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:164)] DEBUG Creating MapperFactoryBean with name 'IUserDao' and 'com.szl.decp.customer.dao.IUserDao' mapperInterface
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 18:11:22 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:11:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:11:23 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3fa6c48]
2016-04-15 18:11:23 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1f4875cd]
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11dd9416: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDao'
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDao'
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDao' to allow for resolving potential circular references
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDao'
2016-04-15 18:11:23 [org.springframework.context.support.GenericApplicationContext.refresh(AbstractApplicationContext.java:544)] WARN  Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:74)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 40 more
2016-04-15 18:11:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11dd9416: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 18:11:23 [org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:231)] ERROR Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f3ca4d1] to prepare test instance [com.szl.decp.customer.service.impl.UserServiceImplTest@23ec84dc]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 25 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:74)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 40 more
2016-04-15 18:11:23 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 18:12:27 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 18:12:27 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 18:12:27 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 18:12:27 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@427800ef declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 18:12:27 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 18:12:27 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 18:12:27 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@619f9377, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@338a9bb3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50f41f34, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b2cb871, org.springframework.test.context.transaction.TransactionalTestExecutionListener@65012945, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f3ca4d1]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 18:12:27 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 18:12:27 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 18:12:27 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 18:12:27 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 18:12:27 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 18:12:27 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 18:12:27 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 18:12:27 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 18:12:27 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@1df749e3: startup date [Fri Apr 15 18:12:27 CST 2016]; root of context hierarchy
2016-04-15 18:12:27 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@1df749e3: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 18:12:27 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 18:12:27 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]]
2016-04-15 18:12:27 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 18:12:27 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\IUserDao.class]
2016-04-15 18:12:27 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:164)] DEBUG Creating MapperFactoryBean with name 'IUserDao' and 'com.szl.decp.customer.dao.IUserDao' mapperInterface
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 18:12:27 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 18:12:27 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@323a17f3]
2016-04-15 18:12:27 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6852f8bd]
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDao'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDao'
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDao' to allow for resolving potential circular references
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDao'
2016-04-15 18:12:27 [org.springframework.context.support.GenericApplicationContext.refresh(AbstractApplicationContext.java:544)] WARN  Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:74)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 40 more
2016-04-15 18:12:27 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e062c51: defining beans [userDao,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,IUserDao]; root of factory hierarchy
2016-04-15 18:12:27 [org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:231)] ERROR Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50f41f34] to prepare test instance [com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userDao' defined in file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 25 more
Caused by: java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig(SqlSessionDaoSupport.java:74)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 40 more
2016-04-15 18:12:27 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:20:20 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:20:20 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:20:20 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:20:20 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@487096f3 declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:20:20 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:20:20 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:20:20 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@400fd8b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@505d7a8a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2918233e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6fb1d085, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f1050d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d8299fd]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:20:20 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@410ba083, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:20:20 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:20:20 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:20:20 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:20:20 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:20:20 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:20:20 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:20:20 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:20:20 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:20:20 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:20:20 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:20:21 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:20:21 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:20:21 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:20:21 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 12 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:20:21 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@1c9598c0: startup date [Fri Apr 15 19:20:21 CST 2016]; root of context hierarchy
2016-04-15 19:20:21 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@1c9598c0: org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:20:21 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:20:21 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:20:21 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:20:21 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:20:21 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:20:21 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:20:21 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:20:21 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@11ad1594]
2016-04-15 19:20:21 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@8a6287e]
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:20:21 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:20:21 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:20:21 [org.springframework.context.support.GenericApplicationContext.refresh(AbstractApplicationContext.java:544)] WARN  Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'userDaoImpl' is defined
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'userDaoImpl' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:698)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1174)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:512)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	... 41 more
2016-04-15 19:20:21 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:20:21 [org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:231)] ERROR Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2918233e] to prepare test instance [com.szl.decp.customer.service.impl.UserServiceImplTest@410ba083]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:276)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:278)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'userDaoImpl' is defined
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:834)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 25 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'userDaoImpl' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:698)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1174)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:512)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:486)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:615)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:169)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:308)
	... 41 more
2016-04-15 19:20:21 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:21:22 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:21:22 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:21:22 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:21:22 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@487096f3 declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:21:22 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:21:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:21:22 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@400fd8b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@505d7a8a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2918233e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6fb1d085, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f1050d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d8299fd]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:22 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@410ba083, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:21:22 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:21:22 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:21:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:21:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:21:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:21:22 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:21:22 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:21:22 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@1c9598c0: startup date [Fri Apr 15 19:21:22 CST 2016]; root of context hierarchy
2016-04-15 19:21:22 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@1c9598c0: org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:21:22 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:21:22 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:21:22 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:21:22 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:21:22 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:21:22 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:21:23 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7df5d62f]
2016-04-15 19:21:23 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e2b1495]
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDaoImpl'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDaoImpl'
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDaoImpl' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userDaoImpl': AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:21:23 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 19:21:23 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 19:21:23 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490)] DEBUG Autowiring by type from bean name 'userDaoImpl' to bean named 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDaoImpl'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userDaoImpl'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userDaoImpl'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:21:23 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2529c248]
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 19:21:23 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 19:21:23 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 19:21:23 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 19:21:23 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@413b7acb size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 19:21:23 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'com.szl.decp.customer.service.impl.UserServiceImplTest': ResourceElement for private com.szl.decp.customer.service.IUserService com.szl.decp.customer.service.impl.UserServiceImplTest.userService
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userService'
2016-04-15 19:21:23 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@410ba083, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:21:23 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:104)] DEBUG Creating a new SqlSession
2016-04-15 19:21:23 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:140)] DEBUG SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4eab14] was not registered for synchronization because synchronization is not active
2016-04-15 19:21:23 [org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:168)] DEBUG Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4eab14]
2016-04-15 19:21:23 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@410ba083, testMethod = test@UserServiceImplTest, testException = org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for customer.selectByPrimaryKey
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for customer.selectByPrimaryKey, mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:21:23 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@32301b86 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@745f1427 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:21:23 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@1c9598c0: startup date [Fri Apr 15 19:21:22 CST 2016]; root of context hierarchy
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@57db05df: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroyBean(DefaultSingletonBeanRegistry.java:568)] DEBUG Retrieved dependent beans for bean 'userService': [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:21:23 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 19:22:31 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:22:31 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:22:31 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:22:31 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@427800ef declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:22:31 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:22:31 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:22:31 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@619f9377, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@338a9bb3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@50f41f34, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b2cb871, org.springframework.test.context.transaction.TransactionalTestExecutionListener@65012945, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f3ca4d1]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:31 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:22:31 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:22:31 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:22:31 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:22:31 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:22:31 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:22:31 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:22:31 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:22:31 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:22:31 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:22:31 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:22:31 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:22:31 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@1df749e3: startup date [Fri Apr 15 19:22:31 CST 2016]; root of context hierarchy
2016-04-15 19:22:31 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@1df749e3: org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:22:31 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:22:31 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:22:31 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:22:31 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:22:32 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:22:32 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:22:32 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:22:32 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:22:32 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:22:32 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:22:32 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:22:32 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:22:32 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:22:32 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:22:32 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@764e2837]
2016-04-15 19:22:32 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5ff6dc84]
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDaoImpl'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDaoImpl'
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDaoImpl' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userDaoImpl': AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:22:32 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 19:22:32 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 19:22:32 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490)] DEBUG Autowiring by type from bean name 'userDaoImpl' to bean named 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDaoImpl'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userDaoImpl'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userDaoImpl'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:22:32 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@55e26b7f]
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 19:22:32 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 19:22:32 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 19:22:32 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 19:22:32 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@33fedb53 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 19:22:32 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'com.szl.decp.customer.service.impl.UserServiceImplTest': ResourceElement for private com.szl.decp.customer.service.IUserService com.szl.decp.customer.service.impl.UserServiceImplTest.userService
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userService'
2016-04-15 19:22:32 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:22:32 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:104)] DEBUG Creating a new SqlSession
2016-04-15 19:22:32 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:140)] DEBUG SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577a2815] was not registered for synchronization because synchronization is not active
2016-04-15 19:22:32 [org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110)] DEBUG Fetching JDBC Connection from DataSource
2016-04-15 19:22:32 [org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:168)] DEBUG Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577a2815]
2016-04-15 19:22:32 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@91d4d65, testMethod = test@UserServiceImplTest, testException = org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is org.apache.commons.dbcp.SQLNestedException: Cannot load JDBC driver class 'com.mysql.jdbc.Driver  '
### The error may exist in com/szl/decp/customer/model/base/mapping/UserMapper.xml
### The error may involve customer.selectByPrimaryKey
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is org.apache.commons.dbcp.SQLNestedException: Cannot load JDBC driver class 'com.mysql.jdbc.Driver  ', mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:22:32 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@52e3d345 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6b438186 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:22:32 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@1df749e3: startup date [Fri Apr 15 19:22:31 CST 2016]; root of context hierarchy
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroyBean(DefaultSingletonBeanRegistry.java:568)] DEBUG Retrieved dependent beans for bean 'userService': [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:22:32 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 19:24:09 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:24:09 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:24:09 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:24:09 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@756bc09d declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:24:09 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:24:09 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:24:09 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4b2cb871, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65012945, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f3ca4d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3668ad91, org.springframework.test.context.transaction.TransactionalTestExecutionListener@125b267f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1e3c6543]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:09 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@23ec84dc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:24:09 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:24:09 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:24:09 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:24:09 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:24:09 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:24:09 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:24:09 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:24:09 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:24:09 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:24:09 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:24:09 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@142b9cd8: startup date [Fri Apr 15 19:24:09 CST 2016]; root of context hierarchy
2016-04-15 19:24:09 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@142b9cd8: org.springframework.beans.factory.support.DefaultListableBeanFactory@9a3da81: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:24:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:10 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:24:10 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:24:10 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:24:10 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:24:10 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:24:10 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:24:10 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:24:10 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:24:10 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:24:10 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:10 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5326f8f]
2016-04-15 19:24:10 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@48078f54]
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9a3da81: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDaoImpl'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDaoImpl'
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDaoImpl' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userDaoImpl': AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:24:10 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 19:24:10 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 19:24:10 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490)] DEBUG Autowiring by type from bean name 'userDaoImpl' to bean named 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDaoImpl'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userDaoImpl'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userDaoImpl'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:10 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3ff8ae6]
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:10 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 19:24:10 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 19:24:10 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 19:24:10 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 19:24:10 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@20f140d0 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 19:24:10 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'com.szl.decp.customer.service.impl.UserServiceImplTest': ResourceElement for private com.szl.decp.customer.service.IUserService com.szl.decp.customer.service.impl.UserServiceImplTest.userService
2016-04-15 19:24:10 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userService'
2016-04-15 19:24:10 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@23ec84dc, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:10 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:104)] DEBUG Creating a new SqlSession
2016-04-15 19:24:10 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:140)] DEBUG SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14dda791] was not registered for synchronization because synchronization is not active
2016-04-15 19:24:10 [org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110)] DEBUG Fetching JDBC Connection from DataSource
2016-04-15 19:24:10 [org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:86)] DEBUG JDBC Connection [jdbc:mysql://localhost:3306/szldb?useUnicode=true&amp;characterEncoding=utf-8, UserName=root@, MySQL Connector Java] will not be managed by Spring
2016-04-15 19:24:10 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG ==>  Preparing: select id, user_name, password, age from user_t where id = ? 
2016-04-15 19:24:11 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG ==> Parameters: 1(Integer)
2016-04-15 19:24:11 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG <==      Total: 1
2016-04-15 19:24:11 [org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:168)] DEBUG Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14dda791]
2016-04-15 19:24:11 [org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:327)] DEBUG Returning JDBC Connection to DataSource
2016-04-15 19:24:11 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@23ec84dc, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:11 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@7a054197 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f155f16 testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:11 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@142b9cd8: startup date [Fri Apr 15 19:24:09 CST 2016]; root of context hierarchy
2016-04-15 19:24:11 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:11 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:24:11 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9a3da81: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:24:11 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroyBean(DefaultSingletonBeanRegistry.java:568)] DEBUG Retrieved dependent beans for bean 'userService': [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:11 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 19:24:54 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:24:54 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:24:54 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:24:54 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@774fd0b4 declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:24:54 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:24:54 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:24:54 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2529c051, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@581118e6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4a79d135, org.springframework.test.context.support.DirtiesContextTestExecutionListener@39614c6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@722dd500, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1efb2d90]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@1a85a3b0 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:24:54 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@1a85a3b0 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@38131650, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:24:54 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:24:54 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:24:55 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:24:55 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:24:55 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:24:55 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:24:55 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:24:55 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@7378c252: startup date [Fri Apr 15 19:24:55 CST 2016]; root of context hierarchy
2016-04-15 19:24:55 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@7378c252: org.springframework.beans.factory.support.DefaultListableBeanFactory@4b5a8874: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:24:55 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:24:55 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:24:55 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:24:55 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:24:55 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:55 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4f5f0269]
2016-04-15 19:24:55 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2087759a]
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4b5a8874: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDaoImpl'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDaoImpl'
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDaoImpl' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userDaoImpl': AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:24:55 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 19:24:55 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 19:24:55 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490)] DEBUG Autowiring by type from bean name 'userDaoImpl' to bean named 'sqlSessionFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDaoImpl'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userDaoImpl'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userDaoImpl'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:24:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:24:56 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@55e26b7f]
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:56 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 19:24:56 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 19:24:56 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 19:24:56 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 19:24:56 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@33fedb53 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 19:24:56 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@1a85a3b0 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@38131650, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:56 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@1a85a3b0 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@38131650, testMethod = test@UserServiceImplTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:56 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@1a85a3b0 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3bbd856a testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:24:56 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@7378c252: startup date [Fri Apr 15 19:24:55 CST 2016]; root of context hierarchy
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4b5a8874: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:24:56 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-04-15 19:25:08 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-04-15 19:25:08 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-04-15 19:25:08 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.customer.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-04-15 19:25:08 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@54856d00 declaringClass = 'com.szl.decp.customer.service.impl.UserServiceImplTest', classes = '{}', locations = '{classpath:spring-mybatis.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-04-15 19:25:08 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.customer.service.impl.UserServiceImplTest]: using defaults.
2016-04-15 19:25:08 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-04-15 19:25:08 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@338a9bb3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50f41f34, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4b2cb871, org.springframework.test.context.support.DirtiesContextTestExecutionListener@65012945, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f3ca4d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3668ad91]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:08 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@62c4268f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-04-15 19:25:08 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-04-15 19:25:08 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-04-15 19:25:08 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:25:08 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:25:08 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [spring-mybatis.xml]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-04-15 19:25:08 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:244)] DEBUG JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2016-04-15 19:25:08 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252)] DEBUG JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\common\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\base\mapping] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/**/*.class]
2016-04-15 19:25:08 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\common\dao\AbstractMybatisDao.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\model\User.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImplTest.class], file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\IUserService.class]]
2016-04-15 19:25:08 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:25:08 [org.springframework.context.annotation.ClassPathBeanDefinitionScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286)] DEBUG Identified candidate component class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\service\impl\UserServiceImpl.class]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481)] DEBUG Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
2016-04-15 19:25:08 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
2016-04-15 19:25:08 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@5613e573: startup date [Fri Apr 15 19:25:08 CST 2016]; root of context hierarchy
2016-04-15 19:25:08 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@5613e573: org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
2016-04-15 19:25:08 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:25:08 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:25:08 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:25:08 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:25:09 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-04-15 19:25:09 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-04-15 19:25:09 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-04-15 19:25:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631)] DEBUG Looking for matching resources in directory tree [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao]
2016-04-15 19:25:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:25:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693)] DEBUG Searching directory [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl] for files matching pattern [D:/workspace/ssm/target/classes/com/szl/decp/customer/dao/**/*.class]
2016-04-15 19:25:09 [org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424)] DEBUG Resolved location pattern [classpath*:com/szl/decp/customer/dao/**/*.class] to resources [file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]]
2016-04-15 19:25:09 [org.mybatis.spring.mapper.ClassPathMapperScanner.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292)] DEBUG Ignored because not a concrete top-level class: file [D:\workspace\ssm\target\classes\com\szl\decp\customer\dao\impl\UserDaoImpl.class]
2016-04-15 19:25:09 [org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(ClassPathMapperScanner.java:158)] WARN  No MyBatis mapper was found in '[com.szl.decp.customer.dao]' package. Please check your configuration.
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'propertyConfigurer'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'propertyConfigurer'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'propertyConfigurer'
2016-04-15 19:25:09 [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties(PropertiesLoaderSupport.java:172)] INFO  Loading properties file from class path resource [jdbc.properties]
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:25:09 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3b28f0f9]
2016-04-15 19:25:09 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@e6050b2]
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userDaoImpl'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userDaoImpl'
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userDaoImpl' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userDaoImpl': AutowiredMethodElement for public void com.szl.decp.common.dao.AbstractMybatisDao.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
2016-04-15 19:25:09 [org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:128)] DEBUG Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dataSource'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dataSource'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dataSource'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
2016-04-15 19:25:09 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:431)] DEBUG Parsed configuration file: 'class path resource [decp/mybatis-config.xml]'
2016-04-15 19:25:09 [org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:477)] DEBUG Property 'mapperLocations' was not specified or no matching resources found
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490)] DEBUG Autowiring by type from bean name 'userDaoImpl' to bean named 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'userDaoImpl'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userDaoImpl'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'userService'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'userService'
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72)] DEBUG Registered injected element on class [com.szl.decp.customer.service.impl.UserServiceImpl]: ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'userService' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'userService': ResourceElement for private com.szl.decp.customer.dao.impl.UserDaoImpl com.szl.decp.customer.service.impl.UserServiceImpl.userDaoImpl
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userDaoImpl'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'userService'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'propertyConfigurer'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'transactionManager'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'transactionManager'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dataSource'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'transactionManager'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'transactionManager'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016-04-15 19:25:09 [org.springframework.context.support.GenericApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3a67ba87]
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-04-15 19:25:09 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-04-15 19:25:09 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-04-15 19:25:09 [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)] DEBUG Storing ApplicationContext in cache under key [[MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2016-04-15 19:25:09 [org.springframework.test.context.cache.logStatistics(DefaultContextCache.java:247)] DEBUG Spring test ApplicationContext cache statistics: [DefaultContextCache@5587f3a size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
2016-04-15 19:25:09 [org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86)] DEBUG Processing injected element of bean 'com.szl.decp.customer.service.impl.UserServiceImplTest': ResourceElement for private com.szl.decp.customer.service.IUserService com.szl.decp.customer.service.impl.UserServiceImplTest.userService
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'userService'
2016-04-15 19:25:09 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG Before test method: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@62c4268f, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:25:09 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:104)] DEBUG Creating a new SqlSession
2016-04-15 19:25:09 [org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:140)] DEBUG SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfbebeb] was not registered for synchronization because synchronization is not active
2016-04-15 19:25:09 [org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110)] DEBUG Fetching JDBC Connection from DataSource
2016-04-15 19:25:09 [org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:86)] DEBUG JDBC Connection [jdbc:mysql://localhost:3306/szldb?useUnicode=true&amp;characterEncoding=utf-8, UserName=root@, MySQL Connector Java] will not be managed by Spring
2016-04-15 19:25:09 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG ==>  Preparing: select id, user_name, password, age from user_t where id = ? 
2016-04-15 19:25:09 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG ==> Parameters: 1(Integer)
2016-04-15 19:25:09 [customer.selectByPrimaryKey.debug(BaseJdbcLogger.java:139)] DEBUG <==      Total: 1
2016-04-15 19:25:09 [org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:168)] DEBUG Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfbebeb]
2016-04-15 19:25:09 [org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:327)] DEBUG Returning JDBC Connection to DataSource
2016-04-15 19:25:09 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106)] DEBUG After test method: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = com.szl.decp.customer.service.impl.UserServiceImplTest@62c4268f, testMethod = test@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:25:09 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@6b438186 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cecbb6e testClass = UserServiceImplTest, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-04-15 19:25:09 [org.springframework.context.support.GenericApplicationContext.doClose(AbstractApplicationContext.java:951)] INFO  Closing org.springframework.context.support.GenericApplicationContext@5613e573: startup date [Fri Apr 15 19:25:08 CST 2016]; root of context hierarchy
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'sqlSessionFactory'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultSingletonBeanRegistry.java:512)] DEBUG Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2d8b20a0: defining beans [userDaoImpl,userService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DefaultListableBeanFactory.destroyBean(DefaultSingletonBeanRegistry.java:568)] DEBUG Retrieved dependent beans for bean 'userService': [com.szl.decp.customer.service.impl.UserServiceImplTest]
2016-04-15 19:25:09 [org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:326)] DEBUG Invoking destroy method 'close' on bean with name 'dataSource'
2016-05-05 17:39:35 [org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:129)] DEBUG SpringJUnit4ClassRunner constructor called with [class com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96)] DEBUG Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
2016-05-05 17:39:35 [org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79)] DEBUG Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
2016-05-05 17:39:35 [org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146)] DEBUG Instantiating TestContextBootstrapper for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
2016-05-05 17:39:35 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97)] DEBUG Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@3cb5cdba declaringClass = 'com.szl.decp.dubbo.service.impl.DemoServiceImplTest', classes = '{}', locations = '{classpath:dubbo/provider.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2016-05-05 17:39:35 [org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84)] DEBUG Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130)] DEBUG @TestExecutionListeners is not present for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]: using defaults.
2016-05-05 17:39:35 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259)] INFO  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-05-05 17:39:35 [org.springframework.test.context.support.DefaultTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185)] INFO  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7f560810, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@69d9c55, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@13a57a3b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7ca48474, org.springframework.test.context.transaction.TransactionalTestExecutionListener@337d0578, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59e84876]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG Before test class: context [DefaultTestContext@32d992b2 testClass = DemoServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@215be6bb testClass = DemoServiceImplTest, locations = '{classpath:dubbo/provider.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71)] DEBUG Retrieved @ProfileValueSourceConfiguration [null] for test class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83)] DEBUG Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.szl.decp.dubbo.service.impl.DemoServiceImplTest]
2016-05-05 17:39:35 [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81)] DEBUG Performing dependency injection for test context [[DefaultTestContext@32d992b2 testClass = DemoServiceImplTest, testInstance = com.szl.decp.dubbo.service.impl.DemoServiceImplTest@51efea79, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@215be6bb testClass = DemoServiceImplTest, locations = '{classpath:dubbo/provider.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2016-05-05 17:39:35 [org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107)] DEBUG Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@215be6bb testClass = DemoServiceImplTest, locations = '{classpath:dubbo/provider.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2016-05-05 17:39:35 [org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107)] DEBUG Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@215be6bb testClass = DemoServiceImplTest, locations = '{classpath:dubbo/provider.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2016-05-05 17:39:35 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:39:35 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:39:35 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 17:39:35 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 17:39:35 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 17:39:35 [org.springframework.context.support.GenericApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.GenericApplicationContext@3ffc5af1: startup date [Thu May 05 17:39:35 CST 2016]; root of context hierarchy
2016-05-05 17:39:35 [org.springframework.context.support.GenericApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.GenericApplicationContext@3ffc5af1: org.springframework.beans.factory.support.DefaultListableBeanFactory@21a947fe: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory]; root of factory hierarchy
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:153)] INFO  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016-05-05 17:39:36 [org.springframework.context.support.GenericApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7b227d8d]
2016-05-05 17:39:36 [org.springframework.context.support.GenericApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@29176cc1]
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@21a947fe: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 17:39:36 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 17:39:36 [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141)] DEBUG After test class: context [DefaultTestContext@32d992b2 testClass = DemoServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@215be6bb testClass = DemoServiceImplTest, locations = '{classpath:dubbo/provider.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
2016-05-05 17:39:36 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:39:36 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:41:37 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: startup date [Thu May 05 17:41:37 CST 2016]; root of context hierarchy
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:41:37 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:41:37 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from URL [http://dubbo.io/provider.xml]
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:42:03 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: startup date [Thu May 05 17:42:03 CST 2016]; root of context hierarchy
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:42:03 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 17:42:03 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 17:42:03 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 17:42:03 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:42:03 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d29cf23]
2016-05-05 17:42:03 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b1c1ea0]
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:42:03 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:42:03 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 17:42:04 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@197d671]
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 17:42:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:42:04 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7200&side=provider&timestamp=1462441324247, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7200&side=provider&timestamp=1462441324247 to registry registry://127.0.0.1:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=7200&registry=multicast&timestamp=1462441324175, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:393)] INFO   [DUBBO] Close dubbo server: /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:146)] INFO   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7200&side=provider&timestamp=1462441324247, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:42:04 [com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: injvm://127.0.0.1/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7200&side=provider&timestamp=1462441324247, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:43:25 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: startup date [Thu May 05 17:43:25 CST 2016]; root of context hierarchy
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:43:25 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 17:43:25 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 17:43:25 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 17:43:25 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:43:25 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d29cf23]
2016-05-05 17:43:25 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b1c1ea0]
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 17:43:25 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@197d671]
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 17:43:25 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:43:25 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=1404&side=provider&timestamp=1462441405864, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=1404&side=provider&timestamp=1462441405864 to registry registry://127.0.0.1:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=1404&registry=multicast&timestamp=1462441405834, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:25 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:393)] INFO   [DUBBO] Close dubbo server: /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:146)] INFO   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=1404&side=provider&timestamp=1462441405864, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:43:26 [com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: injvm://127.0.0.1/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=1404&side=provider&timestamp=1462441405864, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:45:38 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: startup date [Thu May 05 17:45:38 CST 2016]; root of context hierarchy
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 17:45:38 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 17:45:38 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 17:45:38 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 17:45:38 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1175e2db: org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:45:38 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1d29cf23]
2016-05-05 17:45:38 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b1c1ea0]
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2ac273d3: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:45:38 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:38 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 17:45:38 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@197d671]
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 17:45:38 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 17:45:38 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3980&side=provider&timestamp=1462441539035, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3980&side=provider&timestamp=1462441539035 to registry registry://192.168.134.98:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=3980&registry=multicast&timestamp=1462441538991, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:393)] INFO   [DUBBO] Close dubbo server: /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:146)] INFO   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3980&side=provider&timestamp=1462441539035, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 17:45:39 [com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: injvm://127.0.0.1/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3980&side=provider&timestamp=1462441539035, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:16:29 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@53bd815b: startup date [Thu May 05 18:16:29 CST 2016]; root of context hierarchy
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:16:29 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:16:29 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:16:29 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 18:16:29 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@53bd815b: org.springframework.beans.factory.support.DefaultListableBeanFactory@5abca1e0: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:16:30 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3b088d51]
2016-05-05 18:16:30 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@27a8c74e]
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5abca1e0: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:16:30 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6a01e23]
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:16:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:16:30 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5900&side=provider&timestamp=1462443390438, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5900&side=provider&timestamp=1462443390438 to registry registry://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=5900&registry=zookeeper&timestamp=1462443390408, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:393)] INFO   [DUBBO] Close dubbo server: /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.remoting.transport.AbstractServer.close(AbstractServer.java:146)] INFO   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5900&side=provider&timestamp=1462443390438, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:16:30 [com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol.destroy(AbstractProtocol.java:76)] INFO   [DUBBO] Unexport service: injvm://127.0.0.1/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5900&side=provider&timestamp=1462443390438, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:17:53 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:17:53 CST 2016]; root of context hierarchy
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:17:53 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:17:53 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 18:17:53 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:17:53 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:17:54 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:17:54 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 18:17:54 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e9ba398: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:17:54 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@74650e52]
2016-05-05 18:17:54 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1b68ddbd]
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e9ba398: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:17:54 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6293abcc]
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:17:54 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:17:54 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590 to registry registry://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=7444&registry=zookeeper&timestamp=1462443474565, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:54 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:17:55 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@212b5695
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0000, negotiated timeout = 30000
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:17:55 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:17:55 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,2,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,3,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService 
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers 
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,5,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers/dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D7444%2526side%253Dprovider%2526timestamp%253D1462443474590,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers/dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D7444%2526side%253Dprovider%2526timestamp%253D1462443474590 
2016-05-05 18:17:55 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: provider://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,6,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,7,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators 
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:17:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:17:55 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url provider://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, urls: [empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:17:55 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:17:55 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:17:55 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:17:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:17:55 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:18:04 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:18:04 CST 2016]; root of context hierarchy
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:18:04 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/consumer.xml]
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:18:04 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:18:04 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 3 bean definitions from location pattern [classpath:dubbo/consumer.xml]
2016-05-05 18:18:04 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:18:04 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@a7e666]
2016-05-05 18:18:04 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7d0587f1]
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'consumer-of-helloworld-app' to allow for resolving potential circular references
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:18:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'demoService'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:18:04 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@501edcf1]
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:18:04 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:18:04 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:18:04 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:18:04 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:18:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:04 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:18:04 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:18:04 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4ac3c60d
2016-05-05 18:18:04 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0001, negotiated timeout = 30000
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:18:05 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:05 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,10,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,11,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,12,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,13,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9584%2526side%253Dconsumer%2526timestamp%253D1462443484733,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9584%2526side%253Dconsumer%2526timestamp%253D1462443484733 
2016-05-05 18:18:05 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,14,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,15,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,16,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,16,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: s{4,4,1462443475595,1462443475595,0,1,0,0,0,1,5} 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,16,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D7444%2526side%253Dprovider%2526timestamp%253D1462443474590} 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,17,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,18,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,19,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,19,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,19,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,20,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,21,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,22,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,22,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: s{22,22,1462443485618,1462443485618,0,0,0,0,0,0,22} 
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,22,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: v{} 
2016-05-05 18:18:05 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, urls: [dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:18:05 [com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:287)] INFO   [DUBBO] Successed connect to server /192.168.134.98:20880 from NettyClient 192.168.134.98 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x26275bef, /192.168.134.98:53804 => /192.168.134.98:20880]], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:105)] INFO   [DUBBO] Start NettyClient YC-PC/192.168.134.98 connect to the server /192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:05 [com.alibaba.dubbo.config.AbstractConfig.createProxy(ReferenceConfig.java:423)] INFO   [DUBBO] Refer dubbo service com.szl.decp.dubbo.service.DemoService from url zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:06 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9584&timestamp=1462443484863], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:485)] INFO   [DUBBO] Destroy registry:zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9584&timestamp=1462443484863, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unregister(AbstractRegistry.java:312)] INFO   [DUBBO] Unregister: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,23,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9584%2526side%253Dconsumer%2526timestamp%253D1462443484733,-1  response:: null
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:494)] INFO   [DUBBO] Destroy unregister url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unsubscribe(AbstractRegistry.java:343)] INFO   [DUBBO] Unsubscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:510)] INFO   [DUBBO] Destroy unsubscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:915)] DEBUG Closing ZkClient...
2016-05-05 18:18:06 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:82)] INFO  Terminate ZkClient event thread.
2016-05-05 18:18:06 [org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77)] DEBUG Closing ZooKeeper connected to 192.168.134.98:2181
2016-05-05 18:18:06 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:673)] DEBUG Closing session: 0x1548067144a0001
2016-05-05 18:18:06 [org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370)] DEBUG Closing client for session: 0x1548067144a0001
2016-05-05 18:18:06 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0001, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,24,0  request:: null response:: null
2016-05-05 18:18:06 [org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354)] DEBUG Disconnecting client for session: 0x1548067144a0001
2016-05-05 18:18:06 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:684)] INFO  Session: 0x1548067144a0001 closed
2016-05-05 18:18:06 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:928)] DEBUG Closing ZkClient...done
2016-05-05 18:18:06 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:407)] INFO   [DUBBO] Close dubbo connect: /192.168.134.98:53804-->/192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [org.apache.zookeeper.ClientCnxn.run(ClientCnxn.java:519)] INFO  EventThread shut down for session: 0x1548067144a0001
2016-05-05 18:18:06 [com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(NettyChannel.java:135)] INFO   [DUBBO] Close netty channel [id: 0x26275bef, /192.168.134.98:53804 => /192.168.134.98:20880], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197)] WARN   [DUBBO] All clients has discontected from /192.168.134.98:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:06 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:421)] INFO   [DUBBO] Close dubbo connect: 192.168.134.98:0-->192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:63)] INFO   [DUBBO] Destroy reference: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:18:06 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:53804,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:18:15 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:18:25 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:18:35 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 0ms
2016-05-05 18:18:45 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:18:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:19:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:19:15 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:19:25 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:19:35 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:19:45 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:19:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:20:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:20:15 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:20:25 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 4ms
2016-05-05 18:20:35 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:20:45 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:20:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:21:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:21:15 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:21:15 CST 2016]; root of context hierarchy
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:21:15 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/consumer.xml]
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:21:15 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:21:15 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 3 bean definitions from location pattern [classpath:dubbo/consumer.xml]
2016-05-05 18:21:15 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:21:15 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@a7e666]
2016-05-05 18:21:15 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7d0587f1]
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:21:15 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 0ms
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'consumer-of-helloworld-app' to allow for resolving potential circular references
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:21:15 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:21:15 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'demoService'
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:21:16 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@501edcf1]
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:21:16 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:21:16 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:21:16 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:21:16 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733 empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9584&side=consumer&timestamp=1462443484733 dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:21:16 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4ac3c60d
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0002, negotiated timeout = 30000
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:21:16 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:16 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,26,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,27,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,28,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,29,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10088%2526side%253Dconsumer%2526timestamp%253D1462443676162,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10088%2526side%253Dconsumer%2526timestamp%253D1462443676162 
2016-05-05 18:21:16 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,30,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,31,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,32,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,32,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: s{4,4,1462443475595,1462443475595,0,1,0,0,0,1,5} 
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,32,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D7444%2526side%253Dprovider%2526timestamp%253D1462443474590} 
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,33,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,34,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,35,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,35,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,35,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,36,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,37,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,38,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,38,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: s{22,22,1462443485618,1462443485618,0,0,0,0,0,0,22} 
2016-05-05 18:21:16 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,38,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: v{} 
2016-05-05 18:21:16 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, urls: [dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:16 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:287)] INFO   [DUBBO] Successed connect to server /192.168.134.98:20880 from NettyClient 192.168.134.98 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x26275bef, /192.168.134.98:53829 => /192.168.134.98:20880]], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:105)] INFO   [DUBBO] Start NettyClient YC-PC/192.168.134.98 connect to the server /192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.config.AbstractConfig.createProxy(ReferenceConfig.java:423)] INFO   [DUBBO] Refer dubbo service com.szl.decp.dubbo.service.DemoService from url zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=10088&timestamp=1462443676215], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:485)] INFO   [DUBBO] Destroy registry:zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=10088&timestamp=1462443676215, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unregister(AbstractRegistry.java:312)] INFO   [DUBBO] Unregister: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,39,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10088%2526side%253Dconsumer%2526timestamp%253D1462443676162,-1  response:: null
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:494)] INFO   [DUBBO] Destroy unregister url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unsubscribe(AbstractRegistry.java:343)] INFO   [DUBBO] Unsubscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:510)] INFO   [DUBBO] Destroy unsubscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:915)] DEBUG Closing ZkClient...
2016-05-05 18:21:17 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:82)] INFO  Terminate ZkClient event thread.
2016-05-05 18:21:17 [org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77)] DEBUG Closing ZooKeeper connected to 192.168.134.98:2181
2016-05-05 18:21:17 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:673)] DEBUG Closing session: 0x1548067144a0002
2016-05-05 18:21:17 [org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370)] DEBUG Closing client for session: 0x1548067144a0002
2016-05-05 18:21:17 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0002, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,40,0  request:: null response:: null
2016-05-05 18:21:17 [org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354)] DEBUG Disconnecting client for session: 0x1548067144a0002
2016-05-05 18:21:17 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:684)] INFO  Session: 0x1548067144a0002 closed
2016-05-05 18:21:17 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:928)] DEBUG Closing ZkClient...done
2016-05-05 18:21:17 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:407)] INFO   [DUBBO] Close dubbo connect: /192.168.134.98:53829-->/192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(NettyChannel.java:135)] INFO   [DUBBO] Close netty channel [id: 0x26275bef, /192.168.134.98:53829 => /192.168.134.98:20880], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197)] WARN   [DUBBO] All clients has discontected from /192.168.134.98:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:17 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:421)] INFO   [DUBBO] Close dubbo connect: 192.168.134.98:0-->192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:63)] INFO   [DUBBO] Destroy reference: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:20880,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:21:17 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:53829,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:21:25 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:21:35 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:21:45 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:21:55 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 3ms
2016-05-05 18:22:05 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 1ms
2016-05-05 18:22:15 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0000 after 2ms
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:22:28 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:22:28 CST 2016]; root of context hierarchy
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:22:28 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:22:28 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/provider.xml]
2016-05-05 18:22:28 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:22:28 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:22:28 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:22:28 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:22:29 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:22:29 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:22:29 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:22:29 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:22:29 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 5 bean definitions from location pattern [classpath:dubbo/provider.xml]
2016-05-05 18:22:29 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e9ba398: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:22:29 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@74650e52]
2016-05-05 18:22:29 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1b68ddbd]
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e9ba398: defining beans [hello-world-app,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.szl.decp.dubbo.service.DemoService,demoService]; root of factory hierarchy
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'hello-world-app'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'hello-world-app'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'hello-world-app' to allow for resolving potential circular references
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'hello-world-app'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'dubbo'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'dubbo'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'dubbo'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.szl.decp.dubbo.service.DemoService' to allow for resolving potential circular references
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'hello-world-app'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'dubbo'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:22:29 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6293abcc]
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:22:29 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:29 [com.alibaba.dubbo.config.AbstractConfig.onApplicationEvent(ServiceBean.java:107)] INFO   [DUBBO] The service ready on spring started. service: com.szl.decp.dubbo.service.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.config.AbstractConfig.exportLocal(ServiceConfig.java:510)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:470)] INFO   [DUBBO] Export dubbo service com.szl.decp.dubbo.service.DemoService to url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.config.AbstractConfig.doExportUrlsFor1Protocol(ServiceConfig.java:481)] INFO   [DUBBO] Register dubbo service com.szl.decp.dubbo.service.DemoService url dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566 to registry registry://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.5.3&pid=10032&registry=zookeeper&timestamp=1462443749537, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [org.jboss.netty.channel.socket.nio.NioProviderMetadata.debug(NettyHelper.java:70)] DEBUG  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:69)] INFO   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.134.98:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:29 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162 empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10088&side=consumer&timestamp=1462443676162 dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:22:30 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@212b5695
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0003, negotiated timeout = 30000
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:22:30 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:22:30 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,42,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,43,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,44,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,45,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers/dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10032%2526side%253Dprovider%2526timestamp%253D1462443749566,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers/dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10032%2526side%253Dprovider%2526timestamp%253D1462443749566 
2016-05-05 18:22:30 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: provider://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,46,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,47,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,48,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,48,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:22:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,48,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:22:30 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url provider://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, urls: [empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566], dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:30 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:22:30 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:22:30 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:22:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:22:30 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.szl.decp.dubbo.service.DemoService'
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:22:39 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:22:39 CST 2016]; root of context hierarchy
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:22:39 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/consumer.xml]
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:22:39 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:22:39 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 3 bean definitions from location pattern [classpath:dubbo/consumer.xml]
2016-05-05 18:22:39 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:22:39 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@a7e666]
2016-05-05 18:22:39 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7d0587f1]
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'consumer-of-helloworld-app' to allow for resolving potential circular references
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:22:39 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:22:39 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'demoService'
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:22:40 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@501edcf1]
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:22:40 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:22:40 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:22:40 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:22:40 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:22:40 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4ac3c60d
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0004, negotiated timeout = 30000
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:22:40 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:40 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,50,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,51,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,52,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,53,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9320%2526side%253Dconsumer%2526timestamp%253D1462443760182,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9320%2526side%253Dconsumer%2526timestamp%253D1462443760182 
2016-05-05 18:22:40 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,54,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,55,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,56,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,56,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: s{4,4,1462443475595,1462443475595,0,2,0,0,0,2,45} 
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,56,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D10032%2526side%253Dprovider%2526timestamp%253D1462443749566,'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D7444%2526side%253Dprovider%2526timestamp%253D1462443474590} 
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,57,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,58,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,59,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,59,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,59,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,60,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,61,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,62,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,62,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: s{22,22,1462443485618,1462443485618,0,0,0,0,0,0,22} 
2016-05-05 18:22:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,62,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: v{} 
2016-05-05 18:22:40 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, urls: [dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=7444&side=provider&timestamp=1462443474590, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:40 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:287)] INFO   [DUBBO] Successed connect to server /192.168.134.98:20880 from NettyClient 192.168.134.98 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x26275bef, /192.168.134.98:53844 => /192.168.134.98:20880]], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:105)] INFO   [DUBBO] Start NettyClient YC-PC/192.168.134.98 connect to the server /192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.config.AbstractConfig.createProxy(ReferenceConfig.java:423)] INFO   [DUBBO] Refer dubbo service com.szl.decp.dubbo.service.DemoService from url zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9320&timestamp=1462443760228], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:485)] INFO   [DUBBO] Destroy registry:zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9320&timestamp=1462443760228, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unregister(AbstractRegistry.java:312)] INFO   [DUBBO] Unregister: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,63,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D9320%2526side%253Dconsumer%2526timestamp%253D1462443760182,-1  response:: null
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:494)] INFO   [DUBBO] Destroy unregister url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unsubscribe(AbstractRegistry.java:343)] INFO   [DUBBO] Unsubscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:510)] INFO   [DUBBO] Destroy unsubscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:915)] DEBUG Closing ZkClient...
2016-05-05 18:22:41 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:82)] INFO  Terminate ZkClient event thread.
2016-05-05 18:22:41 [org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77)] DEBUG Closing ZooKeeper connected to 192.168.134.98:2181
2016-05-05 18:22:41 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:673)] DEBUG Closing session: 0x1548067144a0004
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370)] DEBUG Closing client for session: 0x1548067144a0004
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0004, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,64,0  request:: null response:: null
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354)] DEBUG Disconnecting client for session: 0x1548067144a0004
2016-05-05 18:22:41 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:684)] INFO  Session: 0x1548067144a0004 closed
2016-05-05 18:22:41 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:928)] DEBUG Closing ZkClient...done
2016-05-05 18:22:41 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:407)] INFO   [DUBBO] Close dubbo connect: /192.168.134.98:53844-->/192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.run(ClientCnxn.java:1146)] DEBUG An exception was thrown while closing send thread for session 0x1548067144a0004 : Unable to read additional data from server sessionid 0x1548067144a0004, likely server has closed socket
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(NettyChannel.java:135)] INFO   [DUBBO] Close netty channel [id: 0x26275bef, /192.168.134.98:53844 => /192.168.134.98:20880], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.remoting.transport.AbstractServer.disconnected(AbstractServer.java:197)] WARN   [DUBBO] All clients has discontected from /192.168.134.98:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:41 [org.apache.zookeeper.ClientCnxn.run(ClientCnxn.java:519)] INFO  EventThread shut down for session: 0x1548067144a0004
2016-05-05 18:22:41 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:20880,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:421)] INFO   [DUBBO] Close dubbo connect: 192.168.134.98:0-->192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:63)] INFO   [DUBBO] Destroy reference: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=9320&side=consumer&timestamp=1462443760182, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:22:41 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:53844,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=10032&side=provider&timestamp=1462443749566, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:22:50 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:23:00 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:23:10 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:23:20 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:23:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:23:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 10ms
2016-05-05 18:23:50 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:24:00 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:24:10 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:24:20 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 4ms
2016-05-05 18:24:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:24:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:24:50 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:25:00 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 4ms
2016-05-05 18:25:10 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 3ms
2016-05-05 18:25:20 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:25:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:25:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:25:50 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:26:00 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:26:10 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:26:20 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:26:30 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:26:40 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:26:50 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 0ms
2016-05-05 18:27:00 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 2ms
2016-05-05 18:27:10 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:742)] DEBUG Got ping response for sessionid: 0x1548067144a0003 after 1ms
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:39:44 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:39:44 CST 2016]; root of context hierarchy
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:39:44 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:39:44 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/consumer.xml]
2016-05-05 18:39:44 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:39:45 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:39:45 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 3 bean definitions from location pattern [classpath:dubbo/consumer.xml]
2016-05-05 18:39:45 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:39:45 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@a7e666]
2016-05-05 18:39:45 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7d0587f1]
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'consumer-of-helloworld-app' to allow for resolving potential circular references
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'demoService'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:39:45 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@501edcf1]
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:39:45 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:39:45 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:39:45 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:39:45 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=4504&side=provider&timestamp=1462444768267}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;D:\workspace\DubboServer\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:39:45 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4facf68f
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a0007, negotiated timeout = 30000
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:39:45 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:39:45 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:45 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,85,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,86,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,87,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,88,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D3288%2526side%253Dconsumer%2526timestamp%253D1462444785574,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D3288%2526side%253Dconsumer%2526timestamp%253D1462444785574 
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,89,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,90,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,91,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,91,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: s{4,4,1462443475595,1462443475595,0,7,0,0,0,1,80} 
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,91,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D4504%2526side%253Dprovider%2526timestamp%253D1462444768267} 
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,92,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,93,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,94,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,94,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,94,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,95,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,96,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,97,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,97,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: s{22,22,1462443485618,1462443485618,0,0,0,0,0,0,22} 
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,97,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: v{} 
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, urls: [dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=4504&side=provider&timestamp=1462444768267, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:287)] INFO   [DUBBO] Successed connect to server /192.168.134.98:20880 from NettyClient 192.168.134.98 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x07690781, /192.168.134.98:54012 => /192.168.134.98:20880]], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:105)] INFO   [DUBBO] Start NettyClient YC-PC/192.168.134.98 connect to the server /192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.config.AbstractConfig.createProxy(ReferenceConfig.java:423)] INFO   [DUBBO] Refer dubbo service com.szl.decp.dubbo.service.DemoService from url zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3288&timestamp=1462444785622], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:485)] INFO   [DUBBO] Destroy registry:zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3288&timestamp=1462444785622, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unregister(AbstractRegistry.java:312)] INFO   [DUBBO] Unregister: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,98,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D3288%2526side%253Dconsumer%2526timestamp%253D1462444785574,-1  response:: null
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:494)] INFO   [DUBBO] Destroy unregister url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unsubscribe(AbstractRegistry.java:343)] INFO   [DUBBO] Unsubscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:510)] INFO   [DUBBO] Destroy unsubscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:915)] DEBUG Closing ZkClient...
2016-05-05 18:39:46 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:82)] INFO  Terminate ZkClient event thread.
2016-05-05 18:39:46 [org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77)] DEBUG Closing ZooKeeper connected to 192.168.134.98:2181
2016-05-05 18:39:46 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:673)] DEBUG Closing session: 0x1548067144a0007
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370)] DEBUG Closing client for session: 0x1548067144a0007
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a0007, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,99,0  request:: null response:: null
2016-05-05 18:39:46 [org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354)] DEBUG Disconnecting client for session: 0x1548067144a0007
2016-05-05 18:39:46 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:684)] INFO  Session: 0x1548067144a0007 closed
2016-05-05 18:39:46 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:928)] DEBUG Closing ZkClient...done
2016-05-05 18:39:46 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:407)] INFO   [DUBBO] Close dubbo connect: /192.168.134.98:54012-->/192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(NettyChannel.java:135)] INFO   [DUBBO] Close netty channel [id: 0x07690781, /192.168.134.98:54012 => /192.168.134.98:20880], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:421)] INFO   [DUBBO] Close dubbo connect: 192.168.134.98:0-->192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:39:46 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:63)] INFO   [DUBBO] Destroy reference: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=3288&side=consumer&timestamp=1462444785574, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:41:47 [org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh(AbstractApplicationContext.java:573)] INFO  Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: startup date [Thu May 05 18:41:47 CST 2016]; root of context hierarchy
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.addLast(MutablePropertySources.java:109)] DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-05-05 18:41:47 [org.springframework.core.env.StandardEnvironment.<init>(AbstractEnvironment.java:126)] DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)] INFO  Loading XML bean definitions from class path resource [dubbo/consumer.xml]
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73)] DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141)] DEBUG Loading schema mappings from [META-INF/spring.schemas]
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147)] DEBUG Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119)] DEBUG Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)] DEBUG Loading bean definitions
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157)] DEBUG Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016-05-05 18:41:47 [com.alibaba.dubbo.common.logger.LoggerFactory.?(?:?)] INFO  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-05-05 18:41:47 [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224)] DEBUG Loaded 3 bean definitions from location pattern [classpath:dubbo/consumer.xml]
2016-05-05 18:41:47 [org.springframework.context.support.ClassPathXmlApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607)] DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7637f22: org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:41:47 [org.springframework.context.support.ClassPathXmlApplicationContext.initMessageSource(AbstractApplicationContext.java:713)] DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@a7e666]
2016-05-05 18:41:47 [org.springframework.context.support.ClassPathXmlApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737)] DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7d0587f1]
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741)] DEBUG Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@78c03f1f: defining beans [consumer-of-helloworld-app,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'consumer-of-helloworld-app' to allow for resolving potential circular references
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'consumer-of-helloworld-app'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.getSingleton(DefaultSingletonBeanRegistry.java:221)] DEBUG Creating shared instance of singleton bean 'demoService'
2016-05-05 18:41:47 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448)] DEBUG Creating instance of bean 'demoService'
2016-05-05 18:41:47 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:47 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:47 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529)] DEBUG Eagerly caching bean 'demoService' to allow for resolving potential circular references
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620)] DEBUG Invoking afterPropertiesSet() on bean with name 'demoService'
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'consumer-of-helloworld-app'
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484)] DEBUG Finished creating instance of bean 'demoService'
2016-05-05 18:41:48 [org.springframework.context.support.ClassPathXmlApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764)] DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@501edcf1]
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:41:48 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-05-05 18:41:48 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81)] DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-05-05 18:41:48 [org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103)] DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-05-05 18:41:48 [org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBean(AbstractBeanFactory.java:250)] DEBUG Returning cached instance of singleton bean 'demoService'
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.loadProperties(AbstractRegistry.java:232)] INFO   [DUBBO] Load registry store file C:\Users\meicai\.dubbo\dubbo-registry-192.168.134.98.cache, data: {com.szl.decp.dubbo.service.DemoService=empty://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&category=configurators&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=8904&side=provider&timestamp=1462444891884}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:63)] DEBUG Creating new ZookKeeper instance to connect to 192.168.134.98:2181.
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:64)] INFO  Starting ZkClient event thread.
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:zookeeper.version=3.4.8--1, built on 02/06/2016 03:18 GMT
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:host.name=YC-PC
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.version=1.8.0_65
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.vendor=Oracle Corporation
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.home=C:\Program Files\Java\jdk1.8.0_65\jre
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.class.path=D:\workspace\ssm-swork\ssm\target\classes;D:\workspace\DubboServer\target\classes;C:\Users\meicai\.m2\repository\org\springframework\spring-core\4.2.1.RELEASE\spring-core-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-web\4.2.1.RELEASE\spring-web-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-beans\4.2.1.RELEASE\spring-beans-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context\4.2.1.RELEASE\spring-context-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-oxm\4.2.1.RELEASE\spring-oxm-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-tx\4.2.1.RELEASE\spring-tx-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-jdbc\4.2.1.RELEASE\spring-jdbc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-webmvc\4.2.1.RELEASE\spring-webmvc-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-expression\4.2.1.RELEASE\spring-expression-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-aop\4.2.1.RELEASE\spring-aop-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-context-support\4.2.1.RELEASE\spring-context-support-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\springframework\spring-test\4.2.1.RELEASE\spring-test-4.2.1.RELEASE.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis\3.2.6\mybatis-3.2.6.jar;C:\Users\meicai\.m2\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;C:\Users\meicai\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\meicai\.m2\repository\com\sun\mail\javax.mail\1.5.0\javax.mail-1.5.0.jar;C:\Users\meicai\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\meicai\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar;C:\Users\meicai\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\meicai\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\meicai\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\meicai\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\meicai\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar;C:\Users\meicai\.m2\repository\org\slf4j\slf4j-log4j12\1.7.12\slf4j-log4j12-1.7.12.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Users\meicai\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\meicai\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\meicai\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\meicai\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\meicai\.m2\repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;C:\Users\meicai\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\meicai\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\meicai\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\meicai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.8\zookeeper-3.4.8.jar;C:\Users\meicai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\meicai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_65/bin/server;C:/Program Files/Java/jre1.8.0_65/bin;C:/Program Files/Java/jre1.8.0_65/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;D:\libs\mysql-5.7.12-winx64\bin;D:\eclipse;;.
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.io.tmpdir=C:\Users\meicai\AppData\Local\Temp\
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:java.compiler=<NA>
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.name=Windows 7
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.arch=amd64
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:os.version=6.1
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.name=meicai
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.home=C:\Users\meicai
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.logEnv(Environment.java:100)] INFO  Client environment:user.dir=D:\workspace\ssm-swork\ssm
2016-05-05 18:41:48 [org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:438)] INFO  Initiating client connection, connectString=192.168.134.98:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@4facf68f
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.<clinit>(ClientCnxn.java:117)] DEBUG zookeeper.disableAutoWatchReset is false
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.connect(ZkClient.java:874)] DEBUG Awaiting connection to Zookeeper server
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:628)] DEBUG Waiting for keeper state SyncConnected
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.logStartConnect(ClientCnxn.java:1032)] INFO  Opening socket connection to server 192.168.134.98/192.168.134.98:2181. Will not attempt to authenticate using SASL (unknown error)
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:876)] INFO  Socket connection established to 192.168.134.98/192.168.134.98:2181, initiating session
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.primeConnection(ClientCnxn.java:949)] DEBUG Session establishment request sent on 192.168.134.98/192.168.134.98:2181
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.onConnected(ClientCnxn.java:1299)] INFO  Session establishment complete on server 192.168.134.98/192.168.134.98:2181, sessionid = 0x1548067144a000a, negotiated timeout = 30000
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:351)] DEBUG Received event: WatchedEvent state:SyncConnected type:None path:null
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:449)] INFO  zookeeper state changed (SyncConnected)
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.process(ZkClient.java:395)] DEBUG Leaving process event
2016-05-05 18:41:48 [org.I0Itec.zkclient.ZkClient.waitForKeeperState(ZkClient.java:638)] DEBUG State is SyncConnected
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2016-05-05 18:41:48 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.register(AbstractRegistry.java:302)] INFO   [DUBBO] Register: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,119,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,120,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,121,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,122,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D5684%2526side%253Dconsumer%2526timestamp%253D1462444908065,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D5684%2526side%253Dconsumer%2526timestamp%253D1462444908065 
2016-05-05 18:41:48 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.subscribe(AbstractRegistry.java:325)] INFO   [DUBBO] Subscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,123,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,124,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,125,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,125,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: s{4,4,1462443475595,1462443475595,0,11,0,0,0,1,117} 
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,125,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.134.98%253A20880%252Fcom.szl.decp.dubbo.service.DemoService%253Fanyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D8904%2526side%253Dprovider%2526timestamp%253D1462444891884} 
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,126,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 11,1  replyHeader:: 11,127,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,128,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,128,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: s{8,8,1462443475741,1462443475741,0,0,0,0,0,0,8} 
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,128,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/configurators,T  response:: v{} 
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 15,1  replyHeader:: 15,129,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 16,1  replyHeader:: 16,130,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 17,1  replyHeader:: 17,131,-110  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 18,3  replyHeader:: 18,131,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: s{22,22,1462443485618,1462443485618,0,0,0,0,0,0,22} 
2016-05-05 18:41:48 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 19,8  replyHeader:: 19,131,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/routers,T  response:: v{} 
2016-05-05 18:41:48 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.notify(AbstractRegistry.java:422)] INFO   [DUBBO] Notify urls for subscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, urls: [dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=hello-world-app&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=8904&side=provider&timestamp=1462444891884, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=configurators&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, empty://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:287)] INFO   [DUBBO] Successed connect to server /192.168.134.98:20880 from NettyClient 192.168.134.98 using dubbo version 2.5.3, channel is NettyChannel [channel=[id: 0x07690781, /192.168.134.98:54050 => /192.168.134.98:20880]], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:48 [com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:105)] INFO   [DUBBO] Start NettyClient YC-PC/192.168.134.98 connect to the server /192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(ExtensionLoader.java:943)] DEBUG  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.config.AbstractConfig.createProxy(ReferenceConfig.java:423)] INFO   [DUBBO] Refer dubbo service com.szl.decp.dubbo.service.DemoService from url zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.remoting.transport.DecodeHandler.decode(DecodeHandler.java:60)] DEBUG  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.config.AbstractConfig.run(AbstractConfig.java:450)] INFO   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:63)] INFO   [DUBBO] Close all registries [zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=5684&timestamp=1462444908117], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:485)] INFO   [DUBBO] Destroy registry:zookeeper://192.168.134.98:2181/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=5684&timestamp=1462444908117, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unregister(AbstractRegistry.java:312)] INFO   [DUBBO] Unregister: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 20,2  replyHeader:: 20,132,0  request:: '/dubbo/com.szl.decp.dubbo.service.DemoService/consumers/consumer%253A%252F%252F192.168.134.98%252Fcom.szl.decp.dubbo.service.DemoService%253Fapplication%253Dconsumer-of-helloworld-app%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.5.3%2526interface%253Dcom.szl.decp.dubbo.service.DemoService%2526methods%253DsayHello%2526pid%253D5684%2526side%253Dconsumer%2526timestamp%253D1462444908065,-1  response:: null
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:494)] INFO   [DUBBO] Destroy unregister url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.unsubscribe(AbstractRegistry.java:343)] INFO   [DUBBO] Unsubscribe: consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(AbstractRegistry.java:510)] INFO   [DUBBO] Destroy unsubscribe url consumer://192.168.134.98/com.szl.decp.dubbo.service.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:915)] DEBUG Closing ZkClient...
2016-05-05 18:41:49 [org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:82)] INFO  Terminate ZkClient event thread.
2016-05-05 18:41:49 [org.I0Itec.zkclient.ZkConnection.close(ZkConnection.java:77)] DEBUG Closing ZooKeeper connected to 192.168.134.98:2181
2016-05-05 18:41:49 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:673)] DEBUG Closing session: 0x1548067144a000a
2016-05-05 18:41:49 [org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1370)] DEBUG Closing client for session: 0x1548067144a000a
2016-05-05 18:41:49 [org.apache.zookeeper.ClientCnxn.readResponse(ClientCnxn.java:843)] DEBUG Reading reply sessionid:0x1548067144a000a, packet:: clientPath:null serverPath:null finished:false header:: 21,-11  replyHeader:: 21,133,0  request:: null response:: null
2016-05-05 18:41:49 [org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1354)] DEBUG Disconnecting client for session: 0x1548067144a000a
2016-05-05 18:41:49 [org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:684)] INFO  Session: 0x1548067144a000a closed
2016-05-05 18:41:49 [org.I0Itec.zkclient.ZkClient.close(ZkClient.java:928)] DEBUG Closing ZkClient...done
2016-05-05 18:41:49 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:407)] INFO   [DUBBO] Close dubbo connect: /192.168.134.98:54050-->/192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.remoting.transport.netty.NettyChannel.close(NettyChannel.java:135)] INFO   [DUBBO] Close netty channel [id: 0x07690781, /192.168.134.98:54050 => /192.168.134.98:20880], dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:421)] INFO   [DUBBO] Close dubbo connect: 192.168.134.98:0-->192.168.134.98:20880, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(AbstractProtocol.java:63)] INFO   [DUBBO] Destroy reference: dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&dubbo=2.5.3&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
2016-05-05 18:41:49 [com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.disconnected(DubboProtocol.java:130)] INFO   [DUBBO] disconected from /192.168.134.98:20880,url:dubbo://192.168.134.98:20880/com.szl.decp.dubbo.service.DemoService?anyhost=true&application=consumer-of-helloworld-app&check=false&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.szl.decp.dubbo.service.DemoService&methods=sayHello&pid=5684&side=consumer&timestamp=1462444908065, dubbo version: 2.5.3, current host: 192.168.134.98
